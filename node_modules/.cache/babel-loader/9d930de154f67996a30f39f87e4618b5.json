{"ast":null,"code":"import { CardRank, CardSuit } from \"../types\";\nexport const newDeck = () => Object.values(CardSuit).map(suit => Object.values(CardRank).map(rank => ({\n  suit,\n  rank\n}))).flat();\nexport const shuffle = deck => {\n  const copy = [...deck];\n  for (let i = copy.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [copy[i], copy[j]] = [copy[j], copy[i]];\n  }\n  return copy;\n};","map":{"version":3,"names":["CardRank","CardSuit","newDeck","Object","values","map","suit","rank","flat","shuffle","deck","copy","i","length","j","Math","floor","random"],"sources":["C:/Users/larry/Desktop/BaCkEnD Projects/mohammed-senior-take-home-test/src/utils/deck.ts"],"sourcesContent":["import { CardRank, CardSuit, Deck } from \"../types\";\n\nexport const newDeck = (): Deck =>\n  Object.values(CardSuit)\n    .map((suit) =>\n      (Object.values(CardRank) as CardRank[]).map((rank) => ({ suit, rank }))\n    )\n    .flat();\n\nexport const shuffle = (deck: Deck): Deck => {\n  const copy = [...deck];\n  for (let i = copy.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [copy[i], copy[j]] = [copy[j], copy[i]];\n  }\n  return copy;\n};\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAc,UAAU;AAEnD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KACrBC,MAAM,CAACC,MAAM,CAACH,QAAQ,CAAC,CACpBI,GAAG,CAAEC,IAAI,IACPH,MAAM,CAACC,MAAM,CAACJ,QAAQ,CAAC,CAAgBK,GAAG,CAAEE,IAAI,KAAM;EAAED,IAAI;EAAEC;AAAK,CAAC,CAAC,CACxE,CAAC,CACAC,IAAI,CAAC,CAAC;AAEX,OAAO,MAAMC,OAAO,GAAIC,IAAU,IAAW;EAC3C,MAAMC,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC;EACtB,KAAK,IAAIE,CAAC,GAAGD,IAAI,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxC,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,IAAI,CAACC,CAAC,CAAC,EAAED,IAAI,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,IAAI,CAACG,CAAC,CAAC,EAAEH,IAAI,CAACC,CAAC,CAAC,CAAC;EACzC;EACA,OAAOD,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}