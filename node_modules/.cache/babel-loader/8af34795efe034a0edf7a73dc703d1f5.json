{"ast":null,"code":"import { newDeck, shuffle } from \"./deck\";\nimport { getHandValue } from \"./scoring\";\nexport const initGame = () => {\n  const deck = shuffle(newDeck());\n  return {\n    deck: deck.slice(4),\n    player: [deck[0], deck[2]],\n    dealer: [deck[1], deck[3]],\n    gameOver: false,\n    message: \"YOUR TURN\",\n    dealerStatus: \"\",\n    playerStatus: \"\",\n    draw: false\n  };\n};\nexport const hit = state => {\n  if (state.gameOver || state.deck.length === 0) return state;\n  const [card, ...deck] = state.deck;\n  const player = [...state.player, card];\n  const total = getHandValue(player);\n  if (total > 21) {\n    return {\n      ...state,\n      player,\n      deck,\n      gameOver: true,\n      message: \"Player busts! Dealer wins.\",\n      dealerStatus: \"win\"\n    };\n  }\n  return {\n    ...state,\n    player,\n    deck\n  };\n};\nexport const stand = state => {\n  let deck = [...state.deck];\n  let dealer = [...state.dealer];\n  while (getHandValue(dealer) < 17) {\n    if (deck.length === 0) break;\n    const [card, ...rest] = deck;\n    if (!card) break;\n    dealer = [...dealer, card];\n    deck = rest;\n  }\n  const playerTotal = getHandValue(state.player);\n  const dealerTotal = getHandValue(dealer);\n  let message = \"\";\n  let playerStatus = \"\";\n  let dealerStatus = \"\";\n  let draw = false;\n  if (dealerTotal > 21) {\n    message = \"Dealer busts! Player wins.\";\n    playerStatus = \"win\";\n  } else if (playerTotal > dealerTotal) {\n    message = \"Player wins!\";\n    playerStatus = \"win\";\n  } else if (dealerTotal > playerTotal) {\n    message = \"Dealer wins!\";\n    dealerStatus = \"win\";\n  } else {\n    message = \"It's a draw!\";\n    draw = true;\n  }\n  return {\n    ...state,\n    dealer,\n    deck,\n    gameOver: true,\n    message,\n    playerStatus,\n    dealerStatus,\n    draw\n  };\n};","map":{"version":3,"names":["newDeck","shuffle","getHandValue","initGame","deck","slice","player","dealer","gameOver","message","dealerStatus","playerStatus","draw","hit","state","length","card","total","stand","rest","playerTotal","dealerTotal"],"sources":["C:/Users/larry/Desktop/BaCkEnD Projects/mohammed-senior-take-home-test/src/utils/engine.ts"],"sourcesContent":["import { BlackjackState, Deck } from \"../types\";\nimport { newDeck, shuffle } from \"./deck\";\nimport { getHandValue } from \"./scoring\";\n\nexport const initGame = (): BlackjackState => {\n  const deck = shuffle(newDeck());\n  return {\n    deck: deck.slice(4),\n    player: [deck[0], deck[2]],\n    dealer: [deck[1], deck[3]],\n    gameOver: false,\n    message: \"YOUR TURN\",\n    dealerStatus: \"\",\n    playerStatus: \"\",\n    draw: false,\n  };\n};\n\nexport const hit = (state: BlackjackState): BlackjackState => {\n  if (state.gameOver || state.deck.length === 0) return state;\n\n  const [card, ...deck] = state.deck as Deck;\n  const player = [...state.player, card];\n  const total = getHandValue(player);\n\n  if (total > 21) {\n    return {\n      ...state,\n      player,\n      deck,\n      gameOver: true,\n      message: \"Player busts! Dealer wins.\",\n      dealerStatus: \"win\",\n    };\n  }\n\n  return { ...state, player, deck };\n};\n\nexport const stand = (state: BlackjackState): BlackjackState => {\n  let deck = [...state.deck];\n  let dealer = [...state.dealer];\n\n  while (getHandValue(dealer) < 17) {\n    if (deck.length === 0) break;\n    const [card, ...rest] = deck;\n    if (!card) break;\n    dealer = [...dealer, card];\n    deck = rest;\n  }\n\n  const playerTotal = getHandValue(state.player);\n  const dealerTotal = getHandValue(dealer);\n\n  let message = \"\";\n  let playerStatus: \"\" | \"win\" = \"\";\n  let dealerStatus: \"\" | \"win\" = \"\";\n  let draw = false;\n\n  if (dealerTotal > 21) {\n    message = \"Dealer busts! Player wins.\";\n    playerStatus = \"win\";\n  } else if (playerTotal > dealerTotal) {\n    message = \"Player wins!\";\n    playerStatus = \"win\";\n  } else if (dealerTotal > playerTotal) {\n    message = \"Dealer wins!\";\n    dealerStatus = \"win\";\n  } else {\n    message = \"It's a draw!\";\n    draw = true;\n  }\n\n  return { ...state, dealer, deck, gameOver: true, message, playerStatus, dealerStatus, draw };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}